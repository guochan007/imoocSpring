<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<bean id="moocAspect" class="com.imooc.aop.schema.advice.MoocAspect"></bean>
	
	<bean id="aspectBiz" class="com.imooc.aop.schema.advice.biz.AspectBiz"></bean>
	
	<aop:config>
	<!-- 将id为 moocAspect 的这个bean 配置成为一个切面-->
		<aop:aspect id="moocAspectAOP" ref="moocAspect">
				<!-- aop pointcut  切入点 -->
					<!-- 这句意思是 在执行com.imooc.aop.schema.advice.biz这个包下面 已Biz结尾的类 的所有方法前、后   会执行切面 -->
<!-- --> 			<aop:pointcut expression="execution(* com.imooc.aop.schema.advice.biz.*Biz.*(..))" id="moocPiontcut"/> 
				<!-- 前置通知 -->
<!-- -->			<aop:before method="before" pointcut-ref="moocPiontcut"/> 
				<!-- 方法正常返回之后 -->
<!-- 			<aop:after-returning method="afterReturning" pointcut-ref="moocPiontcut"/> -->
				<!-- 抛出异常之后 -->
<!-- 			<aop:after-throwing method="afterThrowing" pointcut-ref="moocPiontcut"/> -->
				<!-- 后置通知  finally 方法正常返回 或者抛出异常  该通知都会执行-->
<!-- -->			<aop:after method="after" pointcut-ref="moocPiontcut"/> 
				<!-- 环绕通知 -->
<!-- 			<aop:around method="around" pointcut-ref="moocPiontcut"/> -->
				<!-- 环绕通知 通知里使用参数-->
<!-- 			<aop:around method="aroundInit" pointcut="execution(* com.imooc.aop.schema.advice.biz.AspectBiz.init(String, int))  -->
<!-- 							and args(bizName, times)"/> -->
<!-- -->	
				<!-- 给匹配到的类biz  指定父类FitImpl 该父类    实现了某接口Fit-->	
				<aop:declare-parents types-matching="com.imooc.aop.schema.advice.biz.*(+)" 
							implement-interface="com.imooc.aop.schema.advice.Fit"
							default-impl="com.imooc.aop.schema.advice.FitImpl"/>
						
		</aop:aspect>
	</aop:config>

 </beans>
